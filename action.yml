name: "GPT Developer"
description: "An AI developer doing the work for you. It performs code changes based on GitHub issues. Warning: Experimental!"
inputs:
  openai_api_key:
    description: "OpenAI API key"
    required: true
  issue_number:
    description: "So GPT can reference the issue number in the commit message"
    required: true
  issue_text:
    description: "So GPT knows what needs to be done"
    required: true
  path:
    description: "Path to the file that needs to be changed"
    required: true
outputs:
  commit_message:
    description: "The commit message"
    value: ${{ steps.gpt.outputs.commit-message }}
  exit_message:
    description: "The exit message, in case GPT thinks it needs to stop and let you know"
    value: ${{ steps.gpt.outputs.exit-message }}
runs:
  using: "composite"
  steps:
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: "Install Python dependencies"
      run: |
        pip install openai
      shell: bash
    - name: "Install Prettier"
      run: |
        npm install -g prettier
      shell: bash
    - name: "Let GPT do the work"
      id: gpt
      run: |
        python $GITHUB_ACTION_PATH/gpt.py "${{ inputs.openai_api_key }}" "${{ inputs.issue_number }}" "${{ inputs.issue_text }}" "${{ inputs.path }}"
        if [ -f "commit-message.txt" ]; then echo "commit_message=$(cat commit-message.txt)" >> $GITHUB_OUTPUT; else echo "commit-message.txt does not exist."; fi
        if [ -f "exit-message.txt" ]; then echo "exit_message=$(cat exit-message.txt)" >> $GITHUB_OUTPUT; else echo "exit-message.txt does not exist."; fi
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
